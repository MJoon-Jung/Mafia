# NestJs application build
name: Deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [12.x, 14.x]

    steps:
      - uses: actions/checkout@v2
      - name: npm install and build
        run: |
          npm install
          npm run build
  #       - uses: actions/upload-artifact@master
  #         with:
  #           name: build artifacts
  #           path: public/

  #   test:
  #     needs: build
  #     runs-on: ubuntu-latest
  #     steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/download-artifact@master
  #       with:
  #         name: build artifacts
  #         path: public
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #     - name: npm install, and test
  #       run: |
  #         npm install
  #         npm test
  #       env:
  #         CI: true
  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: gjgjajaj/mafia-backend
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
  deploy:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - name: Run scripts in server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            ./deploy.sh
